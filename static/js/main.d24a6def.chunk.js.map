{"version":3,"sources":["components/PresCard.js","components/PresList.js","components/SearchGroup.js","components/SearchItem.js","components/SearchItem2.js","components/Scroll.js","components/ErrorBound.js","stuff.js","containers/App.js","serviceWorker.js","index.js"],"names":["PresCard","item","group","email","className","src","alt","Preslist","stuff","map","pres","i","key","id","SearchGroup","newSearchPers","type","placeholder","onChange","SearchItem","newSearchItem","SearchItem2","newSearchItem2","Scroll","props","style","overflowY","height","children","ErrorBound","state","hasError","error","info","this","setState","Component","App","onNewSearchPers","event","searchgroup","target","value","onNewSearchItem","searchitem","onNewSearchItem2","searchitem2","filteredstuff","filter","toLowerCase","includes","PresList","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d24a6def.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst PresCard = ({ item, group, email }) => {\r\n  return (\r\n    <article className=\"h5 w5 dib bg-white ma4 br3 pa3 pa4-ns mv3 ba b--black-10 grow shadow-5\">\r\n      <div className=\"tc\">\r\n        <img\r\n          className=\"br-100 h3 w3 dib photo\"\r\n          src={`https://api.adorable.io/avatars/100/${group}.png`}\r\n          alt=\"present\"\r\n        />\r\n        <h3> {group} </h3>{\" \"}\r\n        <p className=\"lh-copy measure center f6 black-70\"> {item} </p>{\" \"}\r\n        {/* email is not used  */}{\" \"}\r\n      </div>\r\n    </article>\r\n    // <div className=\"bg-light-blue dib tc br3 pa3 ma4 grow bw2 shadow-5\">\r\n    //   <img\r\n    //     className=\"photo\"\r\n    //     src={`https://api.adorable.io/avatars/100/${group}.png`}\r\n    //     alt=\"present\"\r\n    //   />\r\n    //   <h3> {group} </h3> <p class=\"mw4 f6 lh-copy mt2 mid-gray\"> {item} </p>{\" \"}\r\n    //   {/* email is not used  */}{\" \"}\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default PresCard;\r\n","import React from \"react\";\r\nimport PresCard from \"./PresCard\";\r\n\r\nconst Preslist = ({ stuff }) => {\r\n  return (\r\n    <div className=\"flex-row\">\r\n      {\" \"}\r\n      {stuff.map((pres, i) => {\r\n        return (\r\n          <PresCard\r\n            key={stuff[i].id}\r\n            item={stuff[i].item}\r\n            group={stuff[i].group}\r\n            // email={stuff[i].email}\r\n          />\r\n        );\r\n      })}{\" \"}\r\n    </div>\r\n  );\r\n};\r\nexport default Preslist;\r\n","import React from \"react\";\r\n\r\nconst SearchGroup = ({ newSearchPers }) => {\r\n  return (\r\n    <input\r\n      className=\"ma2 pa3 ba b--crimson bg-washed-red\"\r\n      type=\"search\"\r\n      placeholder=\"wine\"\r\n      onChange={newSearchPers}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchGroup;\r\n","import React from \"react\";\r\n//searching by item\r\nconst SearchItem = ({ newSearchItem }) => {\r\n  return (\r\n    <input\r\n      className=\"ma2 pa3 ba b--crimson bg-washed-red\"\r\n      type=\"search\"\r\n      placeholder=\"food\"\r\n      onChange={newSearchItem}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchItem;\r\n","import React from \"react\";\r\n//searching by item\r\nconst SearchItem2 = ({ newSearchItem2 }) => {\r\n  return (\r\n    <input\r\n      className=\"ma2 pa3 ba b--crimson bg-washed-red\"\r\n      type=\"search\"\r\n      placeholder=\"more food\"\r\n      onChange={newSearchItem2}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchItem2;\r\n","import React from \"react\";\r\n\r\nconst Scroll = props => {\r\n  return (\r\n    <div style={{ overflowY: \"scroll\", height: \"600px\" }}>{props.children}</div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorBound extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    };\r\n  }\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <p>no people or items to show</p>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\nexport default ErrorBound;\r\n","export const stuff = [{\r\n        id: 1,\r\n        item: \"Vegetables - also Roasted, Starches, Fish\",\r\n        group: \"Dry White\",\r\n        email: \"agata@mockmail.com\"\r\n    },\r\n    {\r\n        id: 2,\r\n        item: \"Soft and Hard Cheese, Cold Meat, Desserts\",\r\n        group: \"Sweet White\",\r\n        email: \"monika@mockmail.com\"\r\n    },\r\n    {\r\n        id: 3,\r\n        item: \"Soft Cheese, Starches, Fish and Shellfish, White Meat, \",\r\n        group: \"Rich White\",\r\n        email: \"krzysztof@mockmail.com\"\r\n    },\r\n    {\r\n        id: 4,\r\n        item: \"Vegetables, Soft and Hard Cheese, Starches, Fish\",\r\n        group: \"Sparkling\",\r\n        email: \"aneta@mockmail.com\"\r\n    },\r\n    {\r\n        id: 5,\r\n        item: \" Roasted Vegetables, Starches, Shellfish, White and Cold Meat\",\r\n        group: \"Light Red\",\r\n        email: \"agata@mockmail.com\"\r\n    },\r\n    {\r\n        id: 6,\r\n        item: \"Roasted Vegetables, Hard Cheese, Starches, Any Meat\",\r\n        group: \"Medium Red\",\r\n        email: \"@mockmail.com\"\r\n    },\r\n    {\r\n        id: 7,\r\n        item: \"Hard Cheese, Starches, Red and Cold Meat\",\r\n        group: \"Bold Red\",\r\n        email: \"krzysztof@mockmail.com\"\r\n    },\r\n    {\r\n        id: 8,\r\n        item: \"Soft Cheese, Starches, Cold Meat, Sweets\",\r\n        group: \"Dessert\",\r\n        email: \"karolina@mockmail.com\"\r\n    }\r\n];","import React, { Component } from \"react\";\r\nimport PresList from \"../components/PresList\";\r\nimport SearchGroup from \"../components/SearchGroup\";\r\nimport SearchItem from \"../components/SearchItem\";\r\nimport SearchItem2 from \"../components/SearchItem2\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBound from \"../components/ErrorBound\";\r\nimport { stuff } from \"../stuff\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      stuff: stuff,\r\n      searchgroup: \"\",\r\n      searchitem: \"\",\r\n      searchitem2: \"\"\r\n    };\r\n  }\r\n\r\n  onNewSearchPers = event => {\r\n    this.setState({ searchgroup: event.target.value });\r\n  };\r\n\r\n  onNewSearchItem = event => {\r\n    this.setState({ searchitem: event.target.value });\r\n  };\r\n  onNewSearchItem2 = event => {\r\n    this.setState({ searchitem2: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    //filter by two categories\r\n    const { stuff, searchgroup, searchitem, searchitem2 } = this.state;\r\n    const filteredstuff = stuff.filter(stuff => {\r\n      return (\r\n        stuff.group.toLowerCase().includes(searchgroup.toLowerCase()) &&\r\n        stuff.item.toLowerCase().includes(searchitem.toLowerCase()) &&\r\n        stuff.item.toLowerCase().includes(searchitem2.toLowerCase())\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"tc\">\r\n        <h1 className=\"brand\">Easy Wine Pairings </h1>\r\n        <p className=\"dark-red\">\r\n          I'm eating <SearchItem newSearchItem={this.onNewSearchItem} /> and\r\n          <SearchItem2 newSearchItem2={this.onNewSearchItem2} /> With\r\n          <SearchGroup newSearchPers={this.onNewSearchPers} />\r\n        </p>{\" \"}\r\n        <Scroll>\r\n          <ErrorBound>\r\n            <PresList stuff={filteredstuff} />{\" \"}\r\n          </ErrorBound>{\" \"}\r\n        </Scroll>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}